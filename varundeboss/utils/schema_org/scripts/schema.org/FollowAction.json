{"media": {"type": "application/json;profile=http://schema.org/FollowAction"}, "properties": {"http://schema.org/Action": {"http://schema.org/endTime": {"expected_type": ["http://schema.org/DateTime"], "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to *December*.Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."}, "http://schema.org/url": {"expected_type": ["http://schema.org/URL"], "description": "URL of the item."}, "http://schema.org/actionStatus": {"expected_type": ["http://schema.org/ActionStatusType"], "description": "Indicates the current disposition of the Action."}, "http://schema.org/alternateName": {"expected_type": ["http://schema.org/Text"], "description": "An alias for the item."}, "http://schema.org/description": {"expected_type": ["http://schema.org/Text"], "description": "A short description of the item."}, "http://schema.org/potentialAction": {"expected_type": ["http://schema.org/Action"], "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."}, "http://schema.org/mainEntityOfPage": {"expected_type": ["http://schema.org/URL", "http://schema.org/CreativeWork"], "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details. Inverse property: mainEntity."}, "http://schema.org/sameAs": {"expected_type": ["http://schema.org/URL"], "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website."}, "http://schema.org/target": {"expected_type": ["http://schema.org/EntryPoint"], "description": "Indicates a target EntryPoint for an Action."}, "http://schema.org/name": {"expected_type": ["http://schema.org/Text"], "description": "The name of the item."}, "http://schema.org/participant": {"expected_type": ["http://schema.org/Organization", "http://schema.org/Person"], "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with *Steve*."}, "http://schema.org/image": {"expected_type": ["http://schema.org/URL", "http://schema.org/ImageObject"], "description": "An image of the item. This can be a URL or a fully described ImageObject."}, "http://schema.org/agent": {"expected_type": ["http://schema.org/Organization", "http://schema.org/Person"], "description": "The direct performer or driver of the action (animate or inanimate). e.g. *John* wrote a book."}, "http://schema.org/error": {"expected_type": ["http://schema.org/Thing"], "description": "For failed actions, more information on the cause of the failure."}, "http://schema.org/startTime": {"expected_type": ["http://schema.org/DateTime"], "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from *January* to December.Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."}, "http://schema.org/additionalType": {"expected_type": ["http://schema.org/URL"], "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."}, "http://schema.org/instrument": {"expected_type": ["http://schema.org/Thing"], "description": "The object that helped the agent perform the action. e.g. John wrote a book with *a pen*."}, "http://schema.org/object": {"expected_type": ["http://schema.org/Thing"], "description": "The object upon the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read *a book*."}, "http://schema.org/location": {"expected_type": ["http://schema.org/Place", "http://schema.org/Text", "http://schema.org/PostalAddress"], "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."}, "http://schema.org/result": {"expected_type": ["http://schema.org/Thing"], "description": "The result produced in the action. e.g. John wrote *a book*."}}, "http://schema.org/Thing": {"http://schema.org/image": {"expected_type": ["http://schema.org/URL", "http://schema.org/ImageObject"], "description": "An image of the item. This can be a URL or a fully described ImageObject."}, "http://schema.org/url": {"expected_type": ["http://schema.org/URL"], "description": "URL of the item."}, "http://schema.org/alternateName": {"expected_type": ["http://schema.org/Text"], "description": "An alias for the item."}, "http://schema.org/description": {"expected_type": ["http://schema.org/Text"], "description": "A short description of the item."}, "http://schema.org/potentialAction": {"expected_type": ["http://schema.org/Action"], "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."}, "http://schema.org/mainEntityOfPage": {"expected_type": ["http://schema.org/URL", "http://schema.org/CreativeWork"], "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details. Inverse property: mainEntity."}, "http://schema.org/additionalType": {"expected_type": ["http://schema.org/URL"], "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."}, "http://schema.org/name": {"expected_type": ["http://schema.org/Text"], "description": "The name of the item."}, "http://schema.org/sameAs": {"expected_type": ["http://schema.org/URL"], "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website."}}, "http://schema.org/FollowAction": {"http://schema.org/endTime": {"expected_type": ["http://schema.org/DateTime"], "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to *December*.Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."}, "http://schema.org/url": {"expected_type": ["http://schema.org/URL"], "description": "URL of the item."}, "http://schema.org/actionStatus": {"expected_type": ["http://schema.org/ActionStatusType"], "description": "Indicates the current disposition of the Action."}, "http://schema.org/alternateName": {"expected_type": ["http://schema.org/Text"], "description": "An alias for the item."}, "http://schema.org/description": {"expected_type": ["http://schema.org/Text"], "description": "A short description of the item."}, "http://schema.org/potentialAction": {"expected_type": ["http://schema.org/Action"], "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."}, "http://schema.org/mainEntityOfPage": {"expected_type": ["http://schema.org/URL", "http://schema.org/CreativeWork"], "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details. Inverse property: mainEntity."}, "http://schema.org/followee": {"expected_type": ["http://schema.org/Organization", "http://schema.org/Person"], "description": "A sub property of object. The person or organization being followed."}, "http://schema.org/target": {"expected_type": ["http://schema.org/EntryPoint"], "description": "Indicates a target EntryPoint for an Action."}, "http://schema.org/name": {"expected_type": ["http://schema.org/Text"], "description": "The name of the item."}, "http://schema.org/participant": {"expected_type": ["http://schema.org/Organization", "http://schema.org/Person"], "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with *Steve*."}, "http://schema.org/image": {"expected_type": ["http://schema.org/URL", "http://schema.org/ImageObject"], "description": "An image of the item. This can be a URL or a fully described ImageObject."}, "http://schema.org/sameAs": {"expected_type": ["http://schema.org/URL"], "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website."}, "http://schema.org/agent": {"expected_type": ["http://schema.org/Organization", "http://schema.org/Person"], "description": "The direct performer or driver of the action (animate or inanimate). e.g. *John* wrote a book."}, "http://schema.org/error": {"expected_type": ["http://schema.org/Thing"], "description": "For failed actions, more information on the cause of the failure."}, "http://schema.org/startTime": {"expected_type": ["http://schema.org/DateTime"], "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from *January* to December.Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."}, "http://schema.org/additionalType": {"expected_type": ["http://schema.org/URL"], "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."}, "http://schema.org/instrument": {"expected_type": ["http://schema.org/Thing"], "description": "The object that helped the agent perform the action. e.g. John wrote a book with *a pen*."}, "http://schema.org/object": {"expected_type": ["http://schema.org/Thing"], "description": "The object upon the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read *a book*."}, "http://schema.org/location": {"expected_type": ["http://schema.org/Place", "http://schema.org/Text", "http://schema.org/PostalAddress"], "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."}, "http://schema.org/result": {"expected_type": ["http://schema.org/Thing"], "description": "The result produced in the action. e.g. John wrote *a book*."}}}, "description": "The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.Related actions:BefriendAction: Unlike BefriendAction, FollowAction implies that the connection is *not* necessarily reciprocal.SubscribeAction: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.RegisterAction: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.JoinAction: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.TrackAction: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).", "format": "http://schema.org/FollowAction", "id": "FollowAction.json", "instances": {}, "title": "FollowAction"}