{"media": {"type": "application/json;profile=http://schema.org/StructuredValue"}, "properties": {"http://schema.org/Thing": {"http://schema.org/image": {"expected_type": ["http://schema.org/URL", "http://schema.org/ImageObject"], "description": "An image of the item. This can be a URL or a fully described ImageObject."}, "http://schema.org/url": {"expected_type": ["http://schema.org/URL"], "description": "URL of the item."}, "http://schema.org/alternateName": {"expected_type": ["http://schema.org/Text"], "description": "An alias for the item."}, "http://schema.org/description": {"expected_type": ["http://schema.org/Text"], "description": "A short description of the item."}, "http://schema.org/potentialAction": {"expected_type": ["http://schema.org/Action"], "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."}, "http://schema.org/mainEntityOfPage": {"expected_type": ["http://schema.org/URL", "http://schema.org/CreativeWork"], "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details. Inverse property: mainEntity."}, "http://schema.org/additionalType": {"expected_type": ["http://schema.org/URL"], "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."}, "http://schema.org/name": {"expected_type": ["http://schema.org/Text"], "description": "The name of the item."}, "http://schema.org/sameAs": {"expected_type": ["http://schema.org/URL"], "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website."}}}, "description": "Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.", "format": "http://schema.org/StructuredValue", "id": "StructuredValue.json", "instances": {"http://schema.org/value": {"description": "The value of the quantitative value or property value node. For QuantitativeValue, the recommended type for values is 'Number'. For PropertyValue, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.", "used_on_types": ["http://schema.org/QuantitativeValue"]}, "http://schema.org/valueReference": {"description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.", "used_on_types": ["http://schema.org/QuantitativeValue"]}}, "title": "StructuredValue"}