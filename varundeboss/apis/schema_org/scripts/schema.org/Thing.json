{"title": "Thing", "properties": {"http://schema.org/Thing": {"http://schema.org/description": {"expected_type": ["http://schema.org/Text"], "description": "A short description of the item."}, "http://schema.org/sameAs": {"expected_type": ["http://schema.org/URL"], "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website."}, "http://schema.org/url": {"expected_type": ["http://schema.org/URL"], "description": "URL of the item."}, "http://schema.org/mainEntityOfPage": {"expected_type": ["http://schema.org/URL", "http://schema.org/CreativeWork"], "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details. Inverse property: mainEntity."}, "http://schema.org/name": {"expected_type": ["http://schema.org/Text"], "description": "The name of the item."}, "http://schema.org/alternateName": {"expected_type": ["http://schema.org/Text"], "description": "An alias for the item."}, "http://schema.org/potentialAction": {"expected_type": ["http://schema.org/Action"], "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."}, "http://schema.org/additionalType": {"expected_type": ["http://schema.org/URL"], "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."}, "http://schema.org/image": {"expected_type": ["http://schema.org/URL", "http://schema.org/ImageObject"], "description": "An image of the item. This can be a URL or a fully described ImageObject."}}}, "media": {"type": "application/json;profile=http://schema.org/Thing"}, "description": "The most generic type of item.", "id": "Thing.json", "format": "http://schema.org/Thing", "instances": {"http://schema.org/itemReviewed": {"used_on_types": ["http://schema.org/Review"], "description": "The item that is being reviewed/rated."}, "http://schema.org/defaultValue": {"used_on_types": ["http://schema.org/PropertyValueSpecification"], "description": "The default value of the input. For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values."}, "http://schema.org/characterAttribute": {"used_on_types": ["http://schema.org/Game"], "description": "A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage)."}, "http://schema.org/mentions": {"used_on_types": ["http://schema.org/CreativeWork"], "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept."}, "http://schema.org/serviceOutput": {"used_on_types": ["http://schema.org/Service"], "description": "The tangible thing generated by the service, e.g. a passport, permit, etc. Supersedes produces."}, "http://schema.org/gamePlatform": {"used_on_types": ["http://schema.org/VideoGame"], "description": "The electronic systems used to play video games."}, "http://schema.org/reservationFor": {"used_on_types": ["http://schema.org/Reservation"], "description": "The thing -- flight, event, restaurant,etc. being reserved."}, "http://schema.org/purpose": {"used_on_types": ["http://schema.org/AllocateAction"], "description": "A goal towards an action is taken. Can be concrete or abstract."}, "http://schema.org/actionOption": {"used_on_types": ["http://schema.org/ChooseAction"], "description": "A sub property of object. The options subject to this action. Supersedes option."}, "http://schema.org/result": {"used_on_types": ["http://schema.org/Action"], "description": "The result produced in the action. e.g. John wrote *a book*."}, "http://schema.org/replacee": {"used_on_types": ["http://schema.org/ReplaceAction"], "description": "A sub property of object. The object that is being replaced."}, "http://schema.org/gameItem": {"used_on_types": ["http://schema.org/Game"], "description": "An item is an object within the game world that can be collected by a player or, occasionally, a non-player character."}, "http://schema.org/itemListElement": {"used_on_types": ["http://schema.org/ItemList"], "description": "For itemListElement values, you can use simple strings (e.g. \"Peter\", \"Paul\", \"Mary\"), existing entities, or use ListItem. Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists. Note: The order of elements in your mark-up is not sufficient for indicating the order or elements. Use ListItem with a 'position' property in such cases."}, "http://schema.org/about": {"used_on_types": ["http://schema.org/CreativeWork"], "description": "The subject matter of the content."}, "http://schema.org/item": {"used_on_types": ["http://schema.org/DataFeedItem"], "description": "An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')\u2019."}, "http://schema.org/object": {"used_on_types": ["http://schema.org/Action"], "description": "The object upon the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read *a book*."}, "http://schema.org/error": {"used_on_types": ["http://schema.org/Action"], "description": "For failed actions, more information on the cause of the failure."}, "http://schema.org/instrument": {"used_on_types": ["http://schema.org/Action"], "description": "The object that helped the agent perform the action. e.g. John wrote a book with *a pen*."}, "http://schema.org/quest": {"used_on_types": ["http://schema.org/Game"], "description": "The task that a player-controlled character, or group of characters may complete in order to gain a reward."}, "http://schema.org/targetCollection": {"used_on_types": ["http://schema.org/UpdateAction"], "description": "A sub property of object. The collection target of the action. Supersedes collection."}, "http://schema.org/dataFeedElement": {"used_on_types": ["http://schema.org/DataFeed"], "description": "An item within in a data feed. Data feeds may have many elements."}, "http://schema.org/category": {"used_on_types": ["http://schema.org/Offer"], "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy."}, "http://schema.org/replacer": {"used_on_types": ["http://schema.org/ReplaceAction"], "description": "A sub property of object. The object that replaces."}, "http://schema.org/mainEntity": {"used_on_types": ["http://schema.org/CreativeWork"], "description": "Indicates the primary entity described in some page or other CreativeWork. inverse property: mainEntityOfPage."}}}